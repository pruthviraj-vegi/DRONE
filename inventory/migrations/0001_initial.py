# Generated by Django 5.2.1 on 2025-07-05 12:14

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("customers", "0001_initial"),
        ("suppliers", "0001_initial"),
        ("branches", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Inventory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("company_name", models.CharField(max_length=100)),
                ("part_name", models.CharField(max_length=100)),
                ("part_number", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "uom",
                    models.CharField(
                        choices=[
                            ("PCS", "Pieces"),
                            ("LIT", "Liters"),
                            ("BOX", "Boxes"),
                            ("SET", "Sets"),
                            ("PAK", "Packs"),
                            ("BAG", "Bags"),
                        ],
                        default="PCS",
                        max_length=100,
                    ),
                ),
                (
                    "barcode",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                (
                    "purchased_price",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "selling_price",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "discount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                (
                    "minimum_quantity",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "available_quantity",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "quantity",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("gst", models.DecimalField(decimal_places=2, default=5, max_digits=5)),
                ("is_active", models.BooleanField(default=True)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.SET_NULL,
                        null=True,
                        related_name="inventories_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "branch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inventories_branch",
                        to="branches.branch",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Inventories",
                "ordering": ["company_name", "part_name"],
            },
        ),
        migrations.CreateModel(
            name="StockTransaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("initial", "Initial"),
                            ("purchase", "Purchase"),
                            ("adjustment", "Adjustment"),
                            ("return", "Return"),
                            ("damage", "Damage/Loss"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "reference_number",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="stock_transactions_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "inventory",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inventory_transactions",
                        to="inventory.inventory",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
    ]
